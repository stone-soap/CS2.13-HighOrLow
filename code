<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>
			Convert the high or low guesser to function pipelines
		</title>
		<meta 
			name="description" 
			content="Assignment: Convert guess high or low to functional programming">
		<meta name="author" content="--kris--">
		<!--
			Change log:
				30. October 2018												- Drapak
				6. November 2018 - changed style for constant					- Drapak
					
		-->
		<!-- load jQuery for the animations -->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js">
		</script>
		<style>
			body {
				background-color:	lightYellow;
				font-family:		Arial;
				color:				darkOrange;
			}
			h1, h2, h3 {
				color:				brown;
			}
			h1 {
				font-size:			40px;
			}
			#emojiId {
				position:			relative;
			}
		</style>
	</head>
	<body>
		<h2>Guess High or Low!</h2>
		<p>
			It is the online game where you win <strong>nothing</strong>!
			Even if you guess correctly, you get the horror!
		</p>
		<h3>
			I am thinking of a number from 1 to 20. What is it?
		</h3>
		<p>
			Your guess: 
			<input type='text' id='inputId'>
			<button id='buttonId'>Guess!</button>
		</p>
		
		<h1 id='emojiId'>?</h1>
		
		<h3 id='outputId'>Type in a number to start!</h3>

		<script>
		
			
			//INIT: generate a random number when the page loads.
			const COMPUTER_GUESS = Math.ceil( Math.random() * 20 );
			
			
			//INPUT
			var highLowInput = function(){

				//INPUT: read in the number string from the input line
				var inputString	= document.querySelector( '#inputId' ).value;
				return inputString;
			}

			//PROCESS
			var highLowProcess = function(inputNumber){
				//PROCESS: transform the string into an integer
				var inputNumber = parseInt( inputNumber );
				
				console.log( 'inputNumber=' + inputNumber + '...' ); 
				
				//IF: the number entered is greater than the computer's number
				if ( inputNumber > COMPUTER_GUESS ) {
					outputTooHigh();
					
				//IF: the number entered is less than the computer's number
				} else if ( inputNumber < COMPUTER_GUESS ) {
					outputTooLow();
				//IF: the number entered is equal to the computer's number
				} else if ( inputNumber == COMPUTER_GUESS ) {
					outputCorrect();
																		
				//ELSE: some other condition: not <, >, or =. Probably not a number
				} else {
					outputNotNum(inputNumber);
				}
			}


			//OUTPUT
			var outputTooLow = function(){
				console.log( "player's guess is lower" );
				
				//OUTPUT: display a message about which way to guess
				document.querySelector( '#outputId' ).innerHTML
					= 'Nuh uh. Try something bigger!';
					
				//OUTPUT: display an up arrow
				document.querySelector( '#emojiId' ).innerHTML	= '⬆️';
				
				//OUTPUT: animate the emoji down
				$( '#emojiId' ).animate( 
					{ top: 			'-=20px' },
					{ duration: 	500 } 
				);
				//OUTPUT: and return back real fast
				$( '#emojiId' ).animate( 
					{ top: 			'+=20px' },
					{ duration: 	50 }
				);				
										
			}

			var outputTooHigh = function(){
				console.log( "player's guess is higher" );
					
				//OUTPUT: display a message about which way to guess
				document.querySelector( '#outputId' ).innerHTML
					= 'Nope. Try something smaller!';
					
				//OUTPUT: display a down arrow
				document.querySelector( '#emojiId' ).innerHTML	= '⬇️';	

				//OUTPUT: animate the emoji up
				$( '#emojiId' ).animate( 
					{ top: 			'+=20px' },
					{ duration: 	500 } 
				);
				//OUTPUT: and return back real fast
				$( '#emojiId' ).animate( 
					{ top: 			'-=20px' },
					{ duration: 	50 }
				);				



			}

			var outputCorrect = function(){
				console.log( "player's guess is equal" );

				//OUTPUT: display a message about which way to guess
				document.querySelector( '#outputId' ).innerHTML
					= 'Yay! Got it!';
					
				//OUTPUT: display a heart
				document.querySelector( '#emojiId' ).innerHTML	="<img src='https://fearandhunger.wiki.gg/images/7/77/Cavegnome.png'>";
				
				//OUTPUT: animate the emoji to a large font size
				$( '#emojiId' ).animate( 
					{ fontSize: 	'+=20px' },
					{ duration: 	500 } 
				);
				//OUTPUT: and return back real fast
				$( '#emojiId' ).animate( 
					{ fontSize: 	'-=20px' },
					{ duration: 	50 }
				);				
			}

			var outputNotNum = function(inputNumber){
				console.log( 'Oh noes! No number was entered!' );

				//OUTPUT: display a message about which way to guess
				document.querySelector( '#outputId' ).innerHTML
					= inputNumber + "!!!!!  That's not a number! Try again!";
					
				//OUTPUT: display an up arrow
				document.querySelector( '#emojiId' ).innerHTML	= '?';	
				
				//OUTPUT: animate the emoji to a smaller font size
				$( '#emojiId' ).animate( 
					{ fontSize: 	'-=20px' },
					{ duration: 	500 } 
				);
				//OUTPUT: and return back real fast
				$( '#emojiId' ).animate( 
					{ fontSize: 	'+=20px' },
					{ duration: 	50 }
				);
			}



			//MAIN: this does everything in one big blobby function
			var oldMainProcedure = function () {
				console.log( 'in mainProcedure...' );
				var returnedInput = highLowInput();
				highLowProcess(returnedInput);
				
				



					//HINTS!
			//
			//	1. Read over the code, play with the program and see how it works
			//
			//	2. Make some empty functions
			//
			//		a) INPUT: 	Think of a name for a function that reads the input string.
			//					Make the empty input function. 
			//					Add a console.log hello message.
			//
			//		b) PROCESS:	Think of a name for a function that converts the input string
			//						into a number and then decides which message to display.
			//					Make the empty function.
			//					Add a console.log hello message.
			//
			//		c) OUTPUT:	You need to make four output functions:
			//					i) One to tell the user to guess higher
			//					ii) One to tell the user to guess lower
			//					iii) One to tell the user they are correctly
			//					iv) One to display instructions if they don't enter a number
			//					Think of a name for each and create them as empty functions.
			//					Add a console.log hello message.
			//
			//		d) MAIN:	Make a new empty mainProcedure function.
			//					Add a console.log hello message.
			//					Inside, add a trigger to your input function.
			//					Then add a trigger to your process function.
			//					Remember to change the .onclick and .onchange at the end of 
			//						your program so that it triggers the new mainProcedure.
			//
			//		e) INPUT:	Take the input code from oldMainProcedure and move it to your 
			//						input function. 
			//					Return the results of reading the input line
			//		
			//		f) OUTPUT:	Take the output code from oldMainProcedure and move them into
			//						their own functions.
			//
			//		g) PROCESS:	Take the parseInt code and the if statements from oldMainProcedure. 
			//					Move them to your process function.
			//					Trigget the output functions at the proper places of the
			//					if...else code
			}
			

			//INPUT: run mainProcedure when the button is clicked 
			//		or the input line changes
			document.querySelector( '#buttonId' ).onclick = oldMainProcedure;
			document.querySelector( '#inputId' ).onchange = oldMainProcedure;
		</script>
	</body>
</html>
